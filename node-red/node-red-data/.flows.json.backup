[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "de6f18bf45cc2384",
        "type": "tab",
        "label": "Volume",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "2c259f923bd3ecf9",
        "type": "tab",
        "label": "Play/Pause",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "72a281957e266000",
        "type": "tab",
        "label": "Volume",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "a4a956a1d2eab81a",
        "type": "tab",
        "label": "Select",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "dbf1c1d1c9c489a6",
        "type": "tab",
        "label": "Radio Dial",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1c08499b8cdb5db3",
        "type": "tab",
        "label": "Volume",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "8f461fbe1fa2d62c",
        "type": "tab",
        "label": "Next Track",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2bddea5507d7d95a",
        "type": "esphome-device",
        "name": "Controls Radio",
        "host": "192.168.1.155",
        "port": 6053,
        "reconnect": 15,
        "loglevel": "0",
        "logdump": false,
        "ble": false
    },
    {
        "id": "e2244eb88135572b",
        "type": "esphome-device",
        "name": "",
        "host": "192.168.1.155",
        "port": 6053,
        "reconnect": 15,
        "loglevel": "0",
        "logdump": false,
        "ble": false
    },
    {
        "id": "28ac4b4cefc21e9b",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": false,
        "heartbeatInterval": 30,
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ": ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "13b5d5d48f336423",
        "type": "ui_tab",
        "name": "Media Control",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "65551883d3ccca02",
        "type": "ui_group",
        "name": "LMS Control",
        "tab": "5e7f3a9d.752204",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "6bd08b3c7871bfdb",
        "type": "ui_base",
        "theme": {
            "name": "theme-light",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#0094CE",
                    "value": "#0094CE",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#0094CE",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#fafafa",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#1bbfff",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#111111",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#0094ce",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "ae4854e176d33596",
        "type": "ui_tab",
        "name": "Media Control",
        "icon": "dashboard",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "19c5d8b56bbc69a4",
        "type": "ui_tab",
        "name": "Radio Stations",
        "icon": "radio",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "3a524b74c3b7469b",
        "type": "ui_group",
        "name": "LMS Control",
        "tab": "ae4854e176d33596",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "4c4c206ad2bd9773",
        "type": "ui_group",
        "name": "Radio Control",
        "tab": "19c5d8b56bbc69a4",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2f8e8890564feef9",
        "type": "ui_group",
        "name": "Station Editor",
        "tab": "19c5d8b56bbc69a4",
        "order": 2,
        "disp": true,
        "width": "6",
        "collapse": true
    },
    {
        "id": "e1d4e5f5.0d6d58",
        "type": "http request",
        "z": "f6f2187d.f17ca8",
        "name": "LMS JSON-RPC",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "http://192.168.1.183:9008/jsonrpc.js",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 360,
        "wires": [
            [
                "d5a7c5e3.8e8b6",
                "e3d8e1c0.0a5c4"
            ]
        ]
    },
    {
        "id": "d5a7c5e3.8e8b6",
        "type": "json",
        "z": "f6f2187d.f17ca8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 360,
        "wires": [
            [
                "e3d8e1c0.0a5c4",
                "b9c0b6d0.6a6a5"
            ]
        ]
    },
    {
        "id": "e3d8e1c0.0a5c4",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "name": "Debug Response",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 930,
        "y": 320,
        "wires": []
    },
    {
        "id": "b9c0b6d0.6a6a5",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Parse Status",
        "func": "const status = msg.payload.result;\nmsg.payload = {\n    \"artist\": status.artist,\n    \"title\": status.title,\n    \"album\": status.album,\n    \"volume\": status[\"mixer volume\"],\n    \"muted\": status[\"mixer muting\"],\n    \"duration\": status.duration,\n    \"time\": status.time,\n    \"state\": status.mode\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 460,
        "wires": [
            [
                "e3d8e1c0.0a5c4"
            ]
        ]
    },
    {
        "id": "fdfb0a8a.0c1d3",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Mute Toggle",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "{\"action\":\"mute\"}",
        "payloadType": "json",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "a1e9a0c0.3a0d"
            ]
        ]
    },
    {
        "id": "9c4a0d5a.7e8c1",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Volume 25%",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "{\"action\":\"volume\",\"value\":25}",
        "payloadType": "json",
        "x": 130,
        "y": 220,
        "wires": [
            [
                "a1e9a0c0.3a0d"
            ]
        ]
    },
    {
        "id": "7f6a1a2c.1a5c3c",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Play/Pause",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "{\"action\":\"play\"}",
        "payloadType": "json",
        "x": 130,
        "y": 300,
        "wires": [
            [
                "a1e9a0c0.3a0d"
            ]
        ]
    },
    {
        "id": "dcc0a8c6.4c8e48",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Next Track",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "{\"action\":\"next\"}",
        "payloadType": "json",
        "x": 120,
        "y": 360,
        "wires": [
            [
                "a1e9a0c0.3a0d"
            ]
        ]
    },
    {
        "id": "a3f2a0d9.7a4a58",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Get Status",
        "repeat": "",
        "crontab": "",
        "once": false,
        "topic": "",
        "payload": "{\"action\":\"status\"}",
        "payloadType": "json",
        "x": 120,
        "y": 520,
        "wires": [
            [
                "a1e9a0c0.3a0d"
            ]
        ]
    },
    {
        "id": "a1e9a0c0.3a0d",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "name": "Build Command",
        "func": "const playerId = \"b8:27:eb:1c:39:1d\"; // REPLACE WITH YOUR PLAYER ID\nconst action = msg.payload.action;\nconst value = msg.payload.value;\n\nlet command;\nswitch(action) {\n    case 'mute':\n        command = [\"mixer\", \"muting\", value || \"toggle\"];\n        break;\n    case 'volume':\n        command = [\"mixer\", \"volume\", value];\n        break;\n    case 'play':\n        command = [\"play\"];\n        break;\n    case 'pause':\n        command = [\"pause\"];\n        break;\n    case 'next':\n        command = [\"playlist\", \"index\", \"+1\"];\n        break;\n    case 'previous':\n        command = [\"playlist\", \"index\", \"-1\"];\n        break;\n    case 'status':\n        command = [\"status\", \"-\", 1, \"tags:cgABbehldiqtyrSuoKLN\"];\n        break;\n}\n\nmsg.payload = {\n    \"id\": 1,\n    \"method\": \"slim.request\",\n    \"params\": [playerId, command]\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 280,
        "wires": [
            [
                "e1d4e5f5.0d6d58"
            ]
        ]
    },
    {
        "id": "57fd36b9a5824e2f",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "name": "Previous Track",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "",
        "payload": "{\"action\":\"previous\"}",
        "payloadType": "json",
        "x": 140,
        "y": 400,
        "wires": [
            [
                "a1e9a0c0.3a0d"
            ]
        ]
    },
    {
        "id": "ae5ac8079bc238ff",
        "type": "debug",
        "z": "de6f18bf45cc2384",
        "name": "Raw Encoder Value",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 160,
        "wires": []
    },
    {
        "id": "624a8c6e5c1ff826",
        "type": "debug",
        "z": "de6f18bf45cc2384",
        "name": "Volume Set Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 220,
        "wires": []
    },
    {
        "id": "e0b45d5b9fdc4493",
        "type": "esphome-in",
        "z": "de6f18bf45cc2384",
        "name": "Volume Knob",
        "device": "e2244eb88135572b",
        "entity": "3355093594",
        "topic": "",
        "bleaddress": "",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "ae5ac8079bc238ff",
                "cc9b66fa2cee6869"
            ]
        ]
    },
    {
        "id": "cf69238bf8354f69",
        "type": "api-call-service",
        "z": "de6f18bf45cc2384",
        "name": "Set Media Player Volume",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.volume_set",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk"
        ],
        "labelId": [],
        "data": "{\"volume_level\":{{payload.volume_level}}}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "volume_set",
        "x": 530,
        "y": 220,
        "wires": [
            [
                "624a8c6e5c1ff826"
            ]
        ]
    },
    {
        "id": "cc9b66fa2cee6869",
        "type": "function",
        "z": "de6f18bf45cc2384",
        "name": "Convert to volume level",
        "func": "// Print the raw payload to debug\nnode.warn(\"Raw payload: \" + JSON.stringify(msg.payload));\n\n// Get the state value from the ESPHome object\nlet encoderValue = 0;\n\n// Check if payload has a state property (from ESPHome)\nif (msg.payload && typeof msg.payload === 'object' && 'state' in msg.payload) {\n    encoderValue = Number(msg.payload.state);\n    node.warn(\"Found state property: \" + encoderValue);\n} else if (!isNaN(Number(msg.payload))) {\n    // If it's just a simple number\n    encoderValue = Number(msg.payload);\n} else {\n    node.warn(\"Invalid encoder format, using 0\");\n}\n\n// Make sure it's a valid number\nif (isNaN(encoderValue)) {\n    node.warn(\"Invalid encoder value, using 0\");\n    encoderValue = 0;\n}\n\n// First scale the incoming value to 0-1 range\nlet normalizedValue = encoderValue / 100;\n\n// Ensure the normalized value is between 0 and 1\nnormalizedValue = Math.min(Math.max(normalizedValue, 0), 1);\n\n// Apply logarithmic scaling for more natural volume control\nlet volume = Math.pow(normalizedValue, 2);\n\n// Round to 3 decimal places to avoid floating point issues\nvolume = Math.round(volume * 1000) / 1000;\n\n// Format for direct use in Home Assistant\nmsg.payload = {\n    volume_level: volume\n};\n\n// Log the output for debugging\nnode.warn(\"Sending to HA: \" + JSON.stringify(msg.payload));\nnode.warn(\"Linear value: \" + normalizedValue + \", Logarithmic value: \" + volume);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 220,
        "wires": [
            [
                "cf69238bf8354f69"
            ]
        ]
    },
    {
        "id": "4ae369dd31cc54d1",
        "type": "debug",
        "z": "2c259f923bd3ecf9",
        "name": "Play Status",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 80,
        "wires": []
    },
    {
        "id": "8bf41113bd7b0625",
        "type": "esphome-in",
        "z": "2c259f923bd3ecf9",
        "name": "Play Pause Knob",
        "device": "e2244eb88135572b",
        "entity": "4161238302",
        "topic": "",
        "bleaddress": "",
        "x": 80,
        "y": 80,
        "wires": [
            [
                "337e7cc69b135966"
            ]
        ]
    },
    {
        "id": "959c38a72c5ad2c9",
        "type": "api-current-state",
        "z": "2c259f923bd3ecf9",
        "name": "Check if playing",
        "server": "28ac4b4cefc21e9b",
        "version": 3,
        "outputs": 2,
        "halt_if": "playing",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "media_player.desk_3",
        "state_type": "str",
        "blockInputOverrides": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "f43ca62a2ff489eb"
            ],
            [
                "3e829b6646d66696"
            ]
        ]
    },
    {
        "id": "f43ca62a2ff489eb",
        "type": "api-call-service",
        "z": "2c259f923bd3ecf9",
        "name": "Pause Media",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.media_pause",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk_3"
        ],
        "labelId": [],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "media_pause",
        "x": 670,
        "y": 40,
        "wires": [
            [
                "4ae369dd31cc54d1"
            ]
        ]
    },
    {
        "id": "3e829b6646d66696",
        "type": "api-call-service",
        "z": "2c259f923bd3ecf9",
        "name": "Play Media",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.media_play",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk_3"
        ],
        "labelId": [],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "media_play",
        "x": 670,
        "y": 120,
        "wires": [
            [
                "4ae369dd31cc54d1"
            ]
        ]
    },
    {
        "id": "337e7cc69b135966",
        "type": "switch",
        "z": "2c259f923bd3ecf9",
        "name": "Only on button press",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 80,
        "wires": [
            [
                "959c38a72c5ad2c9"
            ]
        ]
    },
    {
        "id": "576543b8b333aa87",
        "type": "debug",
        "z": "72a281957e266000",
        "name": "Raw Encoder Value",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 20,
        "wires": []
    },
    {
        "id": "c68bd94c044f730f",
        "type": "esphome-in",
        "z": "72a281957e266000",
        "name": "Volume Knob",
        "device": "e2244eb88135572b",
        "entity": "3355093594",
        "topic": "",
        "bleaddress": "",
        "x": 70,
        "y": 80,
        "wires": [
            [
                "576543b8b333aa87",
                "b2a712c762c646b0"
            ]
        ]
    },
    {
        "id": "84123abbf99aaa79",
        "type": "debug",
        "z": "72a281957e266000",
        "name": "Not Playing",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 160,
        "wires": []
    },
    {
        "id": "a9fba929149978a8",
        "type": "debug",
        "z": "72a281957e266000",
        "name": "Set Volume Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 100,
        "wires": []
    },
    {
        "id": "b2a712c762c646b0",
        "type": "function",
        "z": "72a281957e266000",
        "name": "Complete Volume Control",
        "func": "// Get the state value from the ESPHome object\nlet encoderValue = 0;\nif (msg.payload && typeof msg.payload === 'object' && 'state' in msg.payload) {\n    encoderValue = Number(msg.payload.state);\n    node.warn(\"Encoder value: \" + encoderValue);\n} else {\n    return null; // Skip if no valid encoder value\n}\n\n// Scale to 0-1 range and apply logarithmic curve\nlet normalizedValue = encoderValue / 100;\nnormalizedValue = Math.min(Math.max(normalizedValue, 0), 1);\nlet volume = Math.pow(normalizedValue, 1.5);\nvolume = Math.round(volume * 1000) / 1000;\n\n// Create new messages for the next nodes\nlet checkStateMsg = { payload: {} };\nlet setVolumeMsg = { payload: {} };\n\n// Store the calculated volume for later use\nflow.set('calculatedVolume', volume);\n\n// Return the message to check player state\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 100,
        "wires": [
            [
                "c2445768ca96782d"
            ]
        ]
    },
    {
        "id": "c2445768ca96782d",
        "type": "api-current-state",
        "z": "72a281957e266000",
        "name": "Media Player State",
        "server": "28ac4b4cefc21e9b",
        "version": 5,
        "outputs": 2,
        "halt_if": "playing",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "media_player.desk_3",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "state",
        "override_payload": "none",
        "entity_location": "data",
        "override_data": "none",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "d2efbd60b5885a22"
            ],
            [
                "84123abbf99aaa79"
            ]
        ]
    },
    {
        "id": "652aae2dc6e82509",
        "type": "api-call-service",
        "z": "72a281957e266000",
        "name": "Set Volume",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.volume_set",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk_3"
        ],
        "labelId": [],
        "data": "{\"volume_level\":{{payload}}}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "volume_set",
        "x": 870,
        "y": 100,
        "wires": [
            [
                "a9fba929149978a8"
            ]
        ]
    },
    {
        "id": "d2efbd60b5885a22",
        "type": "function",
        "z": "72a281957e266000",
        "name": "Prepare Volume Message",
        "func": "// Get the volume value from flow storage\nlet volume = flow.get('calculatedVolume');\n\nnode.warn(\"Setting volume to: \" + volume);\n\n// Set as direct numeric payload\nmsg.payload = volume;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "652aae2dc6e82509"
            ]
        ]
    },
    {
        "id": "a6040bbe2125e59f",
        "type": "api-call-service",
        "z": "a4a956a1d2eab81a",
        "name": "",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.browse_media",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk"
        ],
        "labelId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "browse_media",
        "x": 500,
        "y": 180,
        "wires": [
            [
                "88e614a5fad42c43"
            ]
        ]
    },
    {
        "id": "cb438ae1fb0347fe",
        "type": "esphome-in",
        "z": "a4a956a1d2eab81a",
        "name": "Selector Button",
        "device": "e2244eb88135572b",
        "entity": "3422739041",
        "topic": "",
        "bleaddress": "",
        "x": 160,
        "y": 180,
        "wires": [
            [
                "a6040bbe2125e59f"
            ]
        ]
    },
    {
        "id": "88e614a5fad42c43",
        "type": "debug",
        "z": "a4a956a1d2eab81a",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 760,
        "y": 180,
        "wires": []
    },
    {
        "id": "7e4382c9a271bb36",
        "type": "esphome-in",
        "z": "dbf1c1d1c9c489a6",
        "name": "Rotary Encoder",
        "device": "e2244eb88135572b",
        "entity": "1110226203",
        "x": 120,
        "y": 100,
        "wires": [
            [
                "426a3abdb051bd1d"
            ]
        ]
    },
    {
        "id": "426a3abdb051bd1d",
        "type": "function",
        "z": "dbf1c1d1c9c489a6",
        "name": "Wrap to 1–20",
        "func": "let abs = msg.payload.state;\nlet station = abs % 20;\nstation = station === 0 ? 20 : station;\n\nlet last = flow.get('lastStation') || null;\nif (last === station) return null;\nflow.set('lastStation', station);\n\nmsg.payload = station;\nreturn msg;",
        "outputs": 1,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "8d589d29f19fc484"
            ]
        ]
    },
    {
        "id": "8d589d29f19fc484",
        "type": "function",
        "z": "dbf1c1d1c9c489a6",
        "name": "Map to Station URL",
        "func": "const station = msg.payload;\n\nconst stations = {\n    1: { name: \"WOSU Classical 101\", url: \"https://wosu.streamguys1.com/Classical_128\" },\n    2: { name: \"BBC Radio 6\", url: \"http://stream.live.vc.bbcmedia.co.uk/bbc_6music\" },\n    3: { name: \"Jazz24\", url: \"http://live.wostreaming.net/direct/ppm-jazz24mp3-ibc1\" },\n    4: { name: \"KEXP\", url: \"http://live.kexp.org/kexp320.mp3\" },\n    5: { name: \"SomaFM Groove Salad\", url: \"http://ice1.somafm.com/groovesalad-256-mp3\" },\n    6: { name: \"Drone Zone\", url: \"http://ice1.somafm.com/dronezone-256-mp3\" },\n    7: { name: \"NPR\", url: \"http://npr-ice.streamguys1.com/live.mp3\" },\n    8: { name: \"Classic FM\", url: \"http://media-ice.musicradio.com/ClassicFMMP3\" },\n    9: { name: \"France Inter\", url: \"http://direct.franceinter.fr/live/franceinter-midfi.mp3\" },\n    10: { name: \"Triple J\", url: \"http://live-radio01.mediahubaustralia.com/2TJW/aac/\" },\n    11: { name: \"WBGO Jazz\", url: \"http://wbgo.streamguys.net/wbgo\" },\n    12: { name: \"WNYC\", url: \"http://fm939.wnyc.org/wnycfm\" },\n    13: { name: \"SomaFM Fluid\", url: \"http://ice1.somafm.com/fluid-256-mp3\" },\n    14: { name: \"Deep Space One\", url: \"http://ice1.somafm.com/deepspaceone-256-mp3\" },\n    15: { name: \"Folk Forward\", url: \"http://ice1.somafm.com/folkfwd-256-mp3\" },\n    16: { name: \"Ambient Sleeping Pill\", url: \"http://radio.stereoscenic.com/asp-h\" },\n    17: { name: \"Radio Paradise\", url: \"http://stream.radioparadise.com/aac-320\" },\n    18: { name: \"BBC World Service\", url: \"http://stream.live.vc.bbcmedia.co.uk/bbc_world_service\" },\n    19: { name: \"Classical WETA\", url: \"http://stream.weta.org:8000/fmlive\" },\n    20: { name: \"Indie Pop Rocks\", url: \"http://ice1.somafm.com/indiepop-256-mp3\" }\n};\n\nconst selected = stations[station] || { name: \"Unknown\", url: \"\" };\nmsg.payload = {\n    entity_id: \"media_player.desk\",\n    media_content_id: selected.url,\n    media_content_type: \"music\"\n};\nmsg.stationName = selected.name;\nmsg.stationNumber = station;\nreturn msg;",
        "outputs": 1,
        "x": 530,
        "y": 100,
        "wires": [
            [
                "a8625421bed52305",
                "b2ec8ac981371f32"
            ]
        ]
    },
    {
        "id": "a8625421bed52305",
        "type": "api-call-service",
        "z": "dbf1c1d1c9c489a6",
        "name": "Play Station",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk"
        ],
        "labelId": [],
        "data": "",
        "dataType": "jsonata",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [
            {
                "property": "",
                "propertyType": "msg",
                "value": "",
                "valueType": "data"
            }
        ],
        "queue": "none",
        "blockInputOverrides": false,
        "domain": "media_player",
        "service": "play_media",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "7ec530c71e99d67e"
            ]
        ]
    },
    {
        "id": "b2ec8ac981371f32",
        "type": "debug",
        "z": "dbf1c1d1c9c489a6",
        "name": "Station Info",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 530,
        "y": 160,
        "wires": []
    },
    {
        "id": "7ec530c71e99d67e",
        "type": "debug",
        "z": "dbf1c1d1c9c489a6",
        "name": "Play Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "x": 940,
        "y": 100,
        "wires": []
    },
    {
        "id": "abcdef123456789",
        "type": "api-call-service",
        "z": "dbf1c1d1c9c489a6",
        "name": "Play WOSU Classical",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.play_media",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk"
        ],
        "labelId": [],
        "data": "{\n    \"media_content_id\": \"https://wosu.streamguys1.com/Classical_128\",\n    \"media_content_type\": \"music\",\n    \"extra\": {\n        \"thumb\": \"https://brands.home-assistant.io/_/homeassistant/logo.png\",\n        \"title\": \"WoodenRadio\"\n    }\n}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "play_media",
        "x": 540,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "1579736d9180fa33",
        "type": "inject",
        "z": "dbf1c1d1c9c489a6",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 240,
        "y": 320,
        "wires": [
            [
                "abcdef123456789"
            ]
        ]
    },
    {
        "id": "url_inject_node",
        "type": "inject",
        "z": "dbf1c1d1c9c489a6",
        "name": "WOSU Classical URL",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "radio_station",
        "payload": "{\"url\":\"https://wosu.streamguys1.com/Classical_128\",\"name\":\"WOSU Classical\"}",
        "payloadType": "json",
        "x": 220,
        "y": 420,
        "wires": [
            [
                "play_media_node"
            ]
        ]
    },
    {
        "id": "play_media_node",
        "type": "api-call-service",
        "z": "dbf1c1d1c9c489a6",
        "name": "Play Media (Template)",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.play_media",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk"
        ],
        "labelId": [],
        "data": "{\n    \"media_content_id\": \"{{payload.url}}\",\n    \"media_content_type\": \"music\",\n    \"extra\": {\n        \"thumb\": \"https://brands.home-assistant.io/_/homeassistant/logo.png\",\n        \"title\": \"{{payload.name}}\"\n    }\n}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "play_media",
        "x": 520,
        "y": 420,
        "wires": [
            [
                "c35b07f2e74e040e"
            ]
        ]
    },
    {
        "id": "c35b07f2e74e040e",
        "type": "debug",
        "z": "dbf1c1d1c9c489a6",
        "name": "debug 3",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 720,
        "y": 420,
        "wires": []
    },
    {
        "id": "direct_play_node",
        "type": "inject",
        "z": "dbf1c1d1c9c489a6",
        "name": "Play WOSU Classical",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 220,
        "wires": [
            [
                "service_call_node"
            ]
        ]
    },
    {
        "id": "service_call_node",
        "type": "api-call-service",
        "z": "dbf1c1d1c9c489a6",
        "name": "Play WOSU Classical",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": true,
        "action": "media_player.play_media",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk"
        ],
        "labelId": [],
        "data": "{\n    \"media_content_id\": \"https://wosu.streamguys1.com/Classical_128\",\n    \"media_content_type\": \"music\"\n}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "play_media",
        "x": 420,
        "y": 220,
        "wires": [
            [
                "debug_node"
            ]
        ]
    },
    {
        "id": "debug_node",
        "type": "debug",
        "z": "dbf1c1d1c9c489a6",
        "name": "Play Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 660,
        "y": 220,
        "wires": []
    },
    {
        "id": "6422f6230c2a8a36",
        "type": "debug",
        "z": "1c08499b8cdb5db3",
        "name": "Raw Encoder Value",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 440,
        "y": 160,
        "wires": []
    },
    {
        "id": "412738bdb6a5993d",
        "type": "esphome-in",
        "z": "1c08499b8cdb5db3",
        "name": "Volume Knob",
        "device": "e2244eb88135572b",
        "entity": "3355093594",
        "topic": "",
        "bleaddress": "",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "d20ec7ea0d7303f1",
                "6422f6230c2a8a36"
            ]
        ]
    },
    {
        "id": "fa852e100fcdb26a",
        "type": "debug",
        "z": "1c08499b8cdb5db3",
        "name": "Not Playing",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 280,
        "wires": []
    },
    {
        "id": "79286e3f5c2c9e12",
        "type": "debug",
        "z": "1c08499b8cdb5db3",
        "name": "Set Volume Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 240,
        "wires": []
    },
    {
        "id": "d20ec7ea0d7303f1",
        "type": "function",
        "z": "1c08499b8cdb5db3",
        "name": "Improved Volume Control",
        "func": "// Get the encoder value directly\nlet encoderValue = Number(msg.payload.state) || 0;\n\n// Scale to 0-1 range with more responsive curve\nlet normalizedValue = encoderValue / 100;\nnormalizedValue = Math.min(Math.max(normalizedValue, 0), 1);\n\n// Use a less steep power curve (1.5 instead of 2) for more responsiveness\n// while maintaining logarithmic perception that's natural for audio\nlet volume = Math.pow(normalizedValue, 1.5);\nvolume = Math.round(volume * 100) / 100; // 2 decimal precision is enough\n\n// Set volume directly in the message\nmsg.volumeLevel = volume;\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 240,
        "wires": [
            [
                "61893d3c9a6b2f24"
            ]
        ]
    },
    {
        "id": "61893d3c9a6b2f24",
        "type": "api-current-state",
        "z": "1c08499b8cdb5db3",
        "name": "Media Player State",
        "server": "28ac4b4cefc21e9b",
        "version": 5,
        "outputs": 2,
        "halt_if": "playing",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "media_player.desk",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "state",
        "override_payload": "none",
        "entity_location": "data",
        "override_data": "none",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "a50891842d07e0e7"
            ],
            [
                "fa852e100fcdb26a"
            ]
        ]
    },
    {
        "id": "a50891842d07e0e7",
        "type": "api-call-service",
        "z": "1c08499b8cdb5db3",
        "name": "Set Volume",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.volume_set",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk"
        ],
        "labelId": [],
        "data": "{\"volume_level\":{{volumeLevel}}}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "volume_set",
        "x": 640,
        "y": 240,
        "wires": [
            [
                "79286e3f5c2c9e12"
            ]
        ]
    },
    {
        "id": "9f06fcda52f10e6f",
        "type": "api-call-service",
        "z": "8f461fbe1fa2d62c",
        "name": "Next Track",
        "server": "28ac4b4cefc21e9b",
        "version": 7,
        "debugenabled": false,
        "action": "media_player.media_next_track",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "media_player.desk_3"
        ],
        "labelId": [],
        "data": "",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "media_player",
        "service": "media_next_track",
        "x": 730,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "99ded8e6ed5c7906",
        "type": "esphome-in",
        "z": "8f461fbe1fa2d62c",
        "name": "Selector Button",
        "device": "e2244eb88135572b",
        "entity": "3422739041",
        "topic": "",
        "bleaddress": "",
        "x": 120,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9284f8c3803fd023",
        "type": "switch",
        "z": "8f461fbe1fa2d62c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 280,
        "wires": [
            [
                "e18368413d88c902"
            ]
        ]
    },
    {
        "id": "e18368413d88c902",
        "type": "debug",
        "z": "8f461fbe1fa2d62c",
        "name": "debug 4",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 540,
        "y": 240,
        "wires": []
    },
    {
        "id": "adb24a4ffb0b3ea9",
        "type": "esphome-in",
        "z": "8f461fbe1fa2d62c",
        "name": "Selector Button",
        "device": "2bddea5507d7d95a",
        "entity": "3422739041",
        "topic": "",
        "bleaddress": "",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "21925d67b21c1930"
            ]
        ]
    },
    {
        "id": "21925d67b21c1930",
        "type": "switch",
        "z": "8f461fbe1fa2d62c",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "e3b39dcf5a607022"
            ],
            [
                "1d9443c71a816e03"
            ]
        ]
    },
    {
        "id": "e3b39dcf5a607022",
        "type": "debug",
        "z": "8f461fbe1fa2d62c",
        "name": "True Value Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 80,
        "wires": []
    },
    {
        "id": "1d9443c71a816e03",
        "type": "debug",
        "z": "8f461fbe1fa2d62c",
        "name": "False Value Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 160,
        "wires": []
    },
    {
        "id": "4902979e53913dff",
        "type": "esphome-in",
        "z": "8f461fbe1fa2d62c",
        "name": "Selector Button",
        "device": "e2244eb88135572b",
        "entity": "3422739041",
        "topic": "",
        "bleaddress": "",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "bd9506e785a55996"
            ]
        ]
    },
    {
        "id": "bd9506e785a55996",
        "type": "switch",
        "z": "8f461fbe1fa2d62c",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 420,
        "wires": [
            [
                "b7b1bfce0283ab66",
                "9f06fcda52f10e6f"
            ],
            []
        ]
    },
    {
        "id": "b7b1bfce0283ab66",
        "type": "debug",
        "z": "8f461fbe1fa2d62c",
        "name": "True Value Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "d396b34c38585c9a",
        "type": "debug",
        "z": "8f461fbe1fa2d62c",
        "name": "False Value Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 460,
        "wires": []
    }
]